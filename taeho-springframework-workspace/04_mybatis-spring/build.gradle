plugins {
    id 'java'
    id 'war'
}

group 'com.johnth'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-parameters"
}

dependencies {
    // spring 라이브러리
    implementation 'org.springframework:spring-context:6.1.6'
    implementation 'org.springframework:spring-webmvc:6.1.6'
    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    implementation("org.springframework:spring-jdbc:6.1.6")
    // https://mvnrepository.com/artifact/org.aspectj/aspectjrt
    implementation("org.aspectj:aspectjrt:1.9.19")
    // https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
    implementation("org.aspectj:aspectjweaver:1.9.19")

    // servlet/jsp 라이브러리
    compileOnly('jakarta.servlet:jakarta.servlet-api:6.0.0')
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'

    // 기타 라이브러리
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // logging 라이브러리
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'ch.qos.logback:logback-core:1.4.14'

    // test 라이브러리
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // mybatis
    implementation 'com.mysql:mysql-connector-j:8.0.33'
    implementation 'org.mybatis:mybatis:3.5.16'
    // connection Pool 사용하는 DataSource등록
    implementation("com.zaxxer:HikariCP:6.3.0")
    // mybatis connect spring(SqlSessionTemplate 사용)
    implementation("org.mybatis:mybatis-spring:3.0.3")

}

test {
    useJUnitPlatform()
}